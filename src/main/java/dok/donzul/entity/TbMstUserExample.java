package dok.donzul.entity;

import java.util.ArrayList;
import java.util.List;

public class TbMstUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public TbMstUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIndexNoIsNull() {
			addCriterion("index_no is null");
			return (Criteria) this;
		}

		public Criteria andIndexNoIsNotNull() {
			addCriterion("index_no is not null");
			return (Criteria) this;
		}

		public Criteria andIndexNoEqualTo(Long value) {
			addCriterion("index_no =", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoNotEqualTo(Long value) {
			addCriterion("index_no <>", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoGreaterThan(Long value) {
			addCriterion("index_no >", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoGreaterThanOrEqualTo(Long value) {
			addCriterion("index_no >=", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoLessThan(Long value) {
			addCriterion("index_no <", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoLessThanOrEqualTo(Long value) {
			addCriterion("index_no <=", value, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoIn(List<Long> values) {
			addCriterion("index_no in", values, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoNotIn(List<Long> values) {
			addCriterion("index_no not in", values, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoBetween(Long value1, Long value2) {
			addCriterion("index_no between", value1, value2, "indexNo");
			return (Criteria) this;
		}

		public Criteria andIndexNoNotBetween(Long value1, Long value2) {
			addCriterion("index_no not between", value1, value2, "indexNo");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("username in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("username not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("password like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("password not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredIsNull() {
			addCriterion("is_account_non_expired is null");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredIsNotNull() {
			addCriterion("is_account_non_expired is not null");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredEqualTo(Boolean value) {
			addCriterion("is_account_non_expired =", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredNotEqualTo(Boolean value) {
			addCriterion("is_account_non_expired <>", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredGreaterThan(Boolean value) {
			addCriterion("is_account_non_expired >", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_account_non_expired >=", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredLessThan(Boolean value) {
			addCriterion("is_account_non_expired <", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredLessThanOrEqualTo(Boolean value) {
			addCriterion("is_account_non_expired <=", value, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredIn(List<Boolean> values) {
			addCriterion("is_account_non_expired in", values, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredNotIn(List<Boolean> values) {
			addCriterion("is_account_non_expired not in", values, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredBetween(Boolean value1, Boolean value2) {
			addCriterion("is_account_non_expired between", value1, value2, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonExpiredNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_account_non_expired not between", value1, value2, "isAccountNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedIsNull() {
			addCriterion("is_account_non_locked is null");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedIsNotNull() {
			addCriterion("is_account_non_locked is not null");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedEqualTo(Boolean value) {
			addCriterion("is_account_non_locked =", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedNotEqualTo(Boolean value) {
			addCriterion("is_account_non_locked <>", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedGreaterThan(Boolean value) {
			addCriterion("is_account_non_locked >", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_account_non_locked >=", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedLessThan(Boolean value) {
			addCriterion("is_account_non_locked <", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedLessThanOrEqualTo(Boolean value) {
			addCriterion("is_account_non_locked <=", value, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedIn(List<Boolean> values) {
			addCriterion("is_account_non_locked in", values, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedNotIn(List<Boolean> values) {
			addCriterion("is_account_non_locked not in", values, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedBetween(Boolean value1, Boolean value2) {
			addCriterion("is_account_non_locked between", value1, value2, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsAccountNonLockedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_account_non_locked not between", value1, value2, "isAccountNonLocked");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredIsNull() {
			addCriterion("is_credentials_non_expired is null");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredIsNotNull() {
			addCriterion("is_credentials_non_expired is not null");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredEqualTo(Boolean value) {
			addCriterion("is_credentials_non_expired =", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredNotEqualTo(Boolean value) {
			addCriterion("is_credentials_non_expired <>", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredGreaterThan(Boolean value) {
			addCriterion("is_credentials_non_expired >", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_credentials_non_expired >=", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredLessThan(Boolean value) {
			addCriterion("is_credentials_non_expired <", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredLessThanOrEqualTo(Boolean value) {
			addCriterion("is_credentials_non_expired <=", value, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredIn(List<Boolean> values) {
			addCriterion("is_credentials_non_expired in", values, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredNotIn(List<Boolean> values) {
			addCriterion("is_credentials_non_expired not in", values, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredBetween(Boolean value1, Boolean value2) {
			addCriterion("is_credentials_non_expired between", value1, value2, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsCredentialsNonExpiredNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_credentials_non_expired not between", value1, value2, "isCredentialsNonExpired");
			return (Criteria) this;
		}

		public Criteria andIsEnabledIsNull() {
			addCriterion("is_enabled is null");
			return (Criteria) this;
		}

		public Criteria andIsEnabledIsNotNull() {
			addCriterion("is_enabled is not null");
			return (Criteria) this;
		}

		public Criteria andIsEnabledEqualTo(Boolean value) {
			addCriterion("is_enabled =", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledNotEqualTo(Boolean value) {
			addCriterion("is_enabled <>", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledGreaterThan(Boolean value) {
			addCriterion("is_enabled >", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_enabled >=", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledLessThan(Boolean value) {
			addCriterion("is_enabled <", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledLessThanOrEqualTo(Boolean value) {
			addCriterion("is_enabled <=", value, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledIn(List<Boolean> values) {
			addCriterion("is_enabled in", values, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledNotIn(List<Boolean> values) {
			addCriterion("is_enabled not in", values, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledBetween(Boolean value1, Boolean value2) {
			addCriterion("is_enabled between", value1, value2, "isEnabled");
			return (Criteria) this;
		}

		public Criteria andIsEnabledNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_enabled not between", value1, value2, "isEnabled");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table donzul.tb_mst_user
	 * @mbg.generated  Tue Aug 21 00:32:08 JST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table donzul.tb_mst_user
     *
     * @mbg.generated do_not_delete_during_merge Mon Aug 20 22:43:04 JST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}